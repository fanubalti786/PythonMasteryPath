# Strings
# Strings are data types that stores a squance of characters.

str1 = "this is a string"
str2 = 'this is also string'
str3 = '''this is also string'''

print("python is awsome \nand good")
print(str1)
print(str2)
print(str3)

# Basic operation

# Concatination
str = "hello" + "world"
print(str)

str12 = str1 + str2
print(str12)

#length of str
print(len(str1))
print(len(str2))
print(len(str3))

# the empty space is also part of length
str12 = str1 + " " + str2
print(len(str12))



# Indexing 
# we just access all indexes but we can't manupulate them means this ch1 = "@"
str = "Apna Collage"
ch1 = str[1]
ch4 = str[4]
ch5 = str[5]
ch6 = str[6]
print(ch1,ch4,ch5,ch6)

# Slicing
# Accessing part of a string
#str[starting_idx: ending_idx] ending index is not included

str = "Apna Collage"
print(str[1:6])
print(str[0:4], str[ :4]) #both are sames
print(str[1: ] , str[1: len(str)]) #both are sames
print(str[4: ] , str[4: len(str)]) #both are sames


# Negative indexing in only python
#str[starting_idx: ending_idx] ending index is not included("Apple" = (-5,-4,-3,-2,-1)


str = "Apple"
print(str[-5: -1])

# String Functions

# 1. endswith
str = "i am a coder"
str.endswith("er") #returns true if string ends with substr / False
print(str.endswith("er")) #True
print(str.endswith("er.")) #False

# 2. capidtalize
str1 = str.capitalize() #Capitalize first character
print(str) # its a old string which can't be change
print(str1) # its a new which is capitalize


# 3.Replace
# str.replace("old", "new")
print(str.replace("a", "also")) # replaces of all occurrances of old


# 4 Fine Word
print(str.find("coder")) # return first index of 1st occurrer
print(str.find("q")) # show output is -1

# 5 Count
print(str.count("a"))

















